---
name: Gating

"on":
  pull_request:
  push:
  workflow_dispatch:
    inputs: {}

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5
        with:
          python-version: "3.13"

      - name: Install system dependencies
        uses: nick-invision/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 10
          retry_wait_seconds: 30
          max_attempts: 3
          command: >-
            sudo apt-get update
            && sudo apt-get install
            libkrb5-dev
            libldap2-dev
            libsasl2-dev

      - name: Install dependencies
        run: python -m pip install tox

      - name: Test with tox
        run: python -m tox -e py3

      - name: Run coveralls-python
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade coveralls
          coveralls --service=github
          coveralls --finish --service=github

  hadolint:
    name: Hadolint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile:
          - Dockerfile

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
        with:
          dockerfile: ${{ matrix.dockerfile }}

  image-build:
    name: Container Image Build
    needs: hadolint
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: product-listings-manager
      REGISTRY: quay.io/factory2
      GH_REGISTRY: ghcr.io/${{ github.actor }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Update the Application Version
        run: poetry version "$(./get-version.sh)"

      - name: Get image tag from git branch
        id: get-image-tag
        run: |
          export TAG=$(sed 's/[^0-9a-zA-Z_.-]/__/g' <<< "$GITHUB_REF_NAME") &&
          echo "::set-output name=tag::$TAG"

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: >-
            ${{ steps.get-image-tag.outputs.tag }}
            ${{ github.ref == 'refs/heads/master' && 'latest' || '' }}
            ${{ github.sha }}
          containerfiles: Dockerfile
          build-args: |
            GITHUB_SHA=${{ github.sha }}
            EXPIRES_AFTER=${{ github.ref == 'refs/heads/master' && 'never' || '30d' }}

      - name: Log in to the image registry
        if: github.event_name == 'push' && github.actor != 'dependabot[bot]'
        uses: redhat-actions/podman-login@4934294ad0449894bcd1e9f191899d7292469603 # v1
        with:
          registry: ${{ secrets.REGISTRY_USER && env.REGISTRY || env.GH_REGISTRY }}
          username: ${{ secrets.REGISTRY_USER || github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}

      - name: Push Image
        if: github.event_name == 'push' && github.actor != 'dependabot[bot]'
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ secrets.REGISTRY_USER && env.REGISTRY || env.GH_REGISTRY }}
